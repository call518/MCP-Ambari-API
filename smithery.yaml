## Smithery configuration for MCP Ambari API server
## Docs: https://smithery.ai/docs/config#smitheryyaml
## This file defines how Smithery (and Smithery-compatible MCP client launchers)
## can start the Ambari MCP server via stdio.

name: mcp-ambari-api
description: "MCP server exposing Apache Ambari cluster management & monitoring tools."
homepage: https://github.com/call518/MCP-Ambari-API
license: MIT
tags:
  - ambari
  - hadoop
  - cluster
  - monitoring
  - mcp

startCommand:
  type: stdio
  # User-supplied configuration schema mapped to environment variables.
  configSchema:
    type: object
    required:
      - AMBARI_HOST
      - AMBARI_PORT
      - AMBARI_USER
      - AMBARI_PASS
      - AMBARI_CLUSTER_NAME
    properties:
      AMBARI_HOST:
        type: string
        description: "Ambari server hostname or IP (e.g. host.docker.internal)"
        default: 127.0.0.1
        secret: true
      AMBARI_PORT:
        type: string
        description: "Ambari server port"
        default: "8080"
        secret: true
      AMBARI_USER:
        type: string
        description: "Ambari username"
        default: admin
        secret: true
      AMBARI_PASS:
        type: string
        description: "Ambari password"
        default: admin
        secret: true
      AMBARI_CLUSTER_NAME:
        type: string
        description: "Ambari cluster name"
        default: TEST-AMBARI
        secret: true
  commandFunction: |-
    (config) => {
      // Always use the installed console script from PyPI.
      // (Smithery environment must have already run: pip install mcp-ambari-api[latest|==version])
      const env = {
        AMBARI_HOST: config.AMBARI_HOST,
        AMBARI_PORT: config.AMBARI_PORT,
        AMBARI_USER: config.AMBARI_USER,
        AMBARI_PASS: config.AMBARI_PASS,
        AMBARI_CLUSTER_NAME: config.AMBARI_CLUSTER_NAME
      };
      return { command: 'mcp-ambari-api', args: [], env };
    }
  exampleConfig:
    AMBARI_HOST: host.docker.internal
    AMBARI_PORT: "8080"
    AMBARI_USER: admin
    AMBARI_PASS: admin
    AMBARI_CLUSTER_NAME: TEST-AMBARI

## Notes:
## - Set AMBARI_PASS via Smithery secret storage if available.
## - Adjust AMBARI_HOST/PORT for your environment.
## - Ensure the hosting environment installs the package: pip install mcp-ambari-api (optionally pin a version).
